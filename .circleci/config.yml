version: 2.1

# Define executors for reusable docker environments
executors:
  docker-executor:
    docker:
      - image: circleci/python:3.8  # Adjust based on your projectâ€™s Python version

# Define the jobs
jobs:
  # Job to install dependencies and build the project
  build:
    executor: docker-executor
    steps:
      - checkout  # Checkout the repository code
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt  # Install Python dependencies from requirements.txt

  # Job to run unit tests using pytest
  test:
    executor: docker-executor
    steps:
      - checkout  # Checkout the repository code
      - run:
          name: Run unit tests
          command: pytest  # Run unit tests using pytest

  # Job to build the Docker image
  build-docker:
    docker:
      - image: docker:19.03.12  # Docker image for building the Docker container
    steps:
      - setup_remote_docker:  # Setup Docker environment
          version: '20.10.7'
          docker_layer_caching: true  # Enable caching for faster builds
      - checkout  # Checkout the repository code
      - run:
          name: Build Docker Image
          command: docker build -t your-dockerhub-username/your-image-name .  # Replace with your Docker Hub username and image name

  # Job to push the Docker image to Docker Hub
  push-docker:
    docker:
      - image: docker:19.03.12  # Docker image for pushing the built image to Docker Hub
    steps:
      - setup_remote_docker:  # Setup Docker environment
          version: '20.10.7'
          docker_layer_caching: true
      - checkout  # Checkout the repository code
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin  # Login to Docker Hub
      - run:
          name: Push Docker Image
          command: docker push your-dockerhub-username/your-image-name  # Replace with your Docker Hub username and image name

# Define workflows to orchestrate job execution
workflows:
  version: 2
  build_and_push:
    jobs:
      - build  # First, run the build job to install dependencies
      - test:
          requires:
            - build  # Run tests only after the build job completes
      - build-docker:
          requires:
            - test  # Build Docker image only after tests pass
      - push-docker:
          requires:
            - build-docker  # Push Docker image only after it has been built
